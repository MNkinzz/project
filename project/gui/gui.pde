/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void buttonModeQuery_click1(GButton source, GEvent event) { //_CODE_:buttonModeQuery:868543:
  //println("button1 - GButton >> GEvent." + event + " @ " + millis());
  
  textareaSerial.appendText(">> Query current mode is not implemented\n");
  //String cmd = "qm\r\n";
  ////connexion.write(cmd);
  //textareaSerial.appendText(">> Query current mode\n");
} //_CODE_:buttonModeQuery:868543:

public void optionModeManual_clicked1(GOption source, GEvent event) { //_CODE_:optionModeManual:592748:
  //println("optionModeManual - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:optionModeManual:592748:

public void optioModeSemi2_clicked1(GOption source, GEvent event) { //_CODE_:optionModeSemi:760447:
  //println("optionModeSmi - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:optionModeSemi:760447:

public void optionModeAuto_clicked1(GOption source, GEvent event) { //_CODE_:optionModeAuto:654986:
  //println("optionModeAuto - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:optionModeAuto:654986:

public void buttonModeSet_click1(GButton source, GEvent event) { //_CODE_:buttonModeSet:560767:
  //println("buttonModeSet - GButton >> GEvent." + event + " @ " + millis());
  int mode = 0;
  String mode_string = "manual";
  if (optionModeManual.isSelected()) {
    mode = 0;
    mode_string = "Manual";
  } else if (optionModeSemi.isSelected()) {
    mode = 1;
    mode_string = "Semi autonomous";
  } else if (optionModeAuto.isSelected()) {
    mode_string = "Autonomous";
    mode = 3;
  }
  String cmd = "m" + str(mode) + "\r\n";
  connexion.write(cmd);
  textareaSerial.appendText(">> Setting current mode to \"" + mode_string + "\"\n");
  textfieldModeVal.setText(mode_string);
} //_CODE_:buttonModeSet:560767:

public void buttonForward_click1(GButton source, GEvent event) { //_CODE_:buttonForward:354109:
  //println("buttonForward - GButton >> GEvent." + event + " @ " + millis());
  String cmd = "gf\r\n";
  connexion.write(cmd);
  textareaSerial.appendText(">> issue: forward\n");
} //_CODE_:buttonForward:354109:

public void buttonBackward_click1(GButton source, GEvent event) { //_CODE_:buttonBackward:878457:
  //println("buttonBackward - GButton >> GEvent." + event + " @ " + millis());
  String cmd = "gb\r\n";
  connexion.write(cmd);
  textareaSerial.appendText(">> issue: backward\n");
} //_CODE_:buttonBackward:878457:

public void buttonLeft_click1(GButton source, GEvent event) { //_CODE_:buttonLeft:368747:
  //println("buttonLeft - GButton >> GEvent." + event + " @ " + millis());
  String cmd = "gl\r\n";
  connexion.write(cmd);
  textareaSerial.appendText(">> issue: left\n");
} //_CODE_:buttonLeft:368747:

public void buttonRight_click1(GButton source, GEvent event) { //_CODE_:buttonRight:430581:
  //println("buttonRight - GButton >> GEvent." + event + " @ " + millis());
  String cmd = "gr\r\n";
  connexion.write(cmd);
  textareaSerial.appendText(">> issue: right\n");
} //_CODE_:buttonRight:430581:

public void textareaSerial_change1(GTextArea source, GEvent event) { //_CODE_:textareaSerial:333369:
  println("textareaSerial - GTextArea >> GEvent." + event + " @ " + millis());
} //_CODE_:textareaSerial:333369:

public void buttonStop_click1(GButton source, GEvent event) { //_CODE_:buttonStop:483805:
  //println("buttonStop - GButton >> GEvent." + event + " @ " + millis());
  String cmd = "gt\r\n";
  connexion.write(cmd);
  textareaSerial.appendText(">> issue: stop\n");
} //_CODE_:buttonStop:483805:

public void textfieldModeVal_change1(GTextField source, GEvent event) { //_CODE_:textfieldModeVal:920185:
  println("textfieldModeVal - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textfieldModeVal:920185:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  buttonModeQuery = new GButton(this, 150, 120, 70, 20);
  buttonModeQuery.setText("Query");
  buttonModeQuery.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  buttonModeQuery.addEventHandler(this, "buttonModeQuery_click1");
  labelMode = new GLabel(this, 20, 20, 70, 20);
  labelMode.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  labelMode.setText("Mode");
  labelMode.setOpaque(false);
  togGroup1 = new GToggleGroup();
  optionModeManual = new GOption(this, 20, 50, 120, 20);
  optionModeManual.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  optionModeManual.setText("manual");
  optionModeManual.setOpaque(false);
  optionModeManual.addEventHandler(this, "optionModeManual_clicked1");
  optionModeSemi = new GOption(this, 20, 70, 120, 20);
  optionModeSemi.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  optionModeSemi.setText("semi-autonomous");
  optionModeSemi.setOpaque(false);
  optionModeSemi.addEventHandler(this, "optioModeSemi2_clicked1");
  optionModeAuto = new GOption(this, 20, 50, 120, 100);
  optionModeAuto.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  optionModeAuto.setText("autonomous");
  optionModeAuto.setOpaque(false);
  optionModeAuto.addEventHandler(this, "optionModeAuto_clicked1");
  togGroup1.addControl(optionModeManual);
  optionModeManual.setSelected(true);
  togGroup1.addControl(optionModeSemi);
  togGroup1.addControl(optionModeAuto);
  buttonModeSet = new GButton(this, 40, 120, 70, 20);
  buttonModeSet.setText("Switch");
  buttonModeSet.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  buttonModeSet.addEventHandler(this, "buttonModeSet_click1");
  buttonForward = new GButton(this, 420, 50, 120, 40);
  buttonForward.setText("w");
  buttonForward.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  buttonForward.addEventHandler(this, "buttonForward_click1");
  labelControl = new GLabel(this, 250, 20, 450, 20);
  labelControl.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  labelControl.setText("Control");
  labelControl.setOpaque(false);
  buttonBackward = new GButton(this, 420, 160, 120, 40);
  buttonBackward.setText("s");
  buttonBackward.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  buttonBackward.addEventHandler(this, "buttonBackward_click1");
  buttonLeft = new GButton(this, 280, 110, 120, 40);
  buttonLeft.setText("l");
  buttonLeft.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  buttonLeft.addEventHandler(this, "buttonLeft_click1");
  buttonRight = new GButton(this, 560, 110, 120, 40);
  buttonRight.setText("r");
  buttonRight.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  buttonRight.addEventHandler(this, "buttonRight_click1");
  textareaSerial = new GTextArea(this, 250, 220, 450, 120, G4P.SCROLLBARS_NONE);
  textareaSerial.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  textareaSerial.setOpaque(true);
  textareaSerial.addEventHandler(this, "textareaSerial_change1");
  buttonStop = new GButton(this, 420, 110, 120, 40);
  buttonStop.setText("Stop");
  buttonStop.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  buttonStop.addEventHandler(this, "buttonStop_click1");
  textfieldModeVal = new GTextField(this, 100, 20, 130, 20, G4P.SCROLLBARS_NONE);
  textfieldModeVal.setText("Manual");
  textfieldModeVal.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  textfieldModeVal.setOpaque(true);
  textfieldModeVal.addEventHandler(this, "textfieldModeVal_change1");
}

// Variable declarations 
// autogenerated do not edit
GButton buttonModeQuery; 
GLabel labelMode; 
GToggleGroup togGroup1; 
GOption optionModeManual; 
GOption optionModeSemi; 
GOption optionModeAuto; 
GButton buttonModeSet; 
GButton buttonForward; 
GLabel labelControl; 
GButton buttonBackward; 
GButton buttonLeft; 
GButton buttonRight; 
GTextArea textareaSerial; 
GButton buttonStop; 
GTextField textfieldModeVal; 
